{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/blog/2020-12-20-mac-shell-configuration",
    "result": {"data":{"markdownRemark":{"frontmatter":{"title":"MacOS Big Sur Shell Configuration","date":"December 20, 2020"},"html":"<p>As mentioned in a previous post, I have migrated to an M1 based MacBook Air and have recently spent some time setting up the terminal shell to my tastes.</p>\n<p>This post will detail what I have done to achieve this.</p>\n<h2>Terminal App</h2>\n<p>The terminal application I am using is <code>iTerm2</code> and I run it under the Rosetta translation layer to keep compatibility with things like <code>homebrew</code>.</p>\n<h3>Terminal Config</h3>\n<ul>\n<li>Download 'oh-my-zsh'</li>\n<li>Download iTerm2\n<ul>\n<li>Install a color scheme for iTerm, I use Dracula or Solarized (Light &#x26; Dark), but there are plenty of options</li>\n<li>Set left option key to Esc+</li>\n<li>I use the following <code>Python</code> script for auto-changing iTerm's theme according to my Mac's system theme:</li>\n</ul>\n<deckgo-highlight-code language=\"python\" theme=\"nord\" line-numbers=\"true\"  >\n          <code slot=\"code\">import asyncio\nimport iterm2\n\nasync def changeTheme(connection,parts):\n    theme_dark = &quot;Solarized Dark&quot;\n    theme_light = &quot;Solarized Light&quot;\n    print(parts)\n    \n    if &quot;dark&quot; in parts:\n        preset = await iterm2.ColorPreset.async_get(connection, theme_dark)\n    else:\n        preset = await iterm2.ColorPreset.async_get(connection, theme_light)\n\n    # Update the list of all profiles and iterate over them.\n    profiles=await iterm2.PartialProfile.async_query(connection)\n    for partial in profiles:\n        # Fetch the full profile and then set the color preset in it.\n        profile = await partial.async_get_full_profile()\n        await profile.async_set_color_preset(preset)\n\nasync def main(connection):\n\n    app = await iterm2.async_get_app(connection)\n    window = app.current_window\n    initial_theme = await app.async_get_theme()\n    await changeTheme(connection,initial_theme)\n\n    async with iterm2.VariableMonitor(connection, iterm2.VariableScopes.APP, &quot;effectiveTheme&quot;, None) as mon:\n        while True:\n            # Block until theme changes\n            theme = await mon.async_get()\n            # Themes have space-delimited attributes, one of which will be light or dark.\n            parts = theme.split(&quot; &quot;)\n    \n            await changeTheme(connection,parts)\n            \n\niterm2.run_forever(main)</code>\n        </deckgo-highlight-code>\n<ul>\n<li>This must be placed in <code>$HOME/Library/ApplicationSupport/iTerm2/Scripts/AutoLaunch</code></li>\n<li>Then go to <code>iTerm2 > Scripts > Autolaunch</code> and install the Python runtime</li>\n</ul>\n</li>\n</ul>\n<h3>Fonts</h3>\n<ul>\n<li>Install patched <code>Nerd Fonts</code> for terminal symbols/icons\n<ul>\n<li><code>brew tap homebrew/cask-fonts</code></li>\n<li><code>brew install --cask font-hack-nerd-font</code></li>\n</ul>\n</li>\n<li>Install powerlevel10k <code>https://gist.github.com/kevin-smets/8568070</code> and run <code>p10k configure</code> then follow the wizard according to your tastes</li>\n</ul>\n<h3>Jekyll (How I made this blog)</h3>\n<ul>\n<li>Install jekyll '<a href=\"https://jekyllrb.com/docs/installation/macos/\">https://jekyllrb.com/docs/installation/macos/</a>'\n<ul>\n<li><code>gem install --user-install bundler jekyll</code></li>\n<li>Navigate to a jekyll project folder and run <code>bundle config set --local path 'vendor/bundle'</code>\n<ul>\n<li>Note this will fail if there are spaces in the path to the folder</li>\n</ul>\n</li>\n<li>Run <code>bundler install</code></li>\n<li>Now <code>bundle exec jekyll serve</code> will work</li>\n</ul>\n</li>\n</ul>\n<h3>Terminal Dotfiles</h3>\n<ul>\n<li>.git-credentials &#x26; .gitconfig</li>\n<li>.zshrc customisations:\n<ul>\n<li>alias for iCloud drive</li>\n<li>function for highlight homebrew package</li>\n</ul>\n</li>\n</ul>\n<h1>Homebrew:</h1>\n<ul>\n<li>Install using a terminal app running through Rosetta</li>\n<li>Always use an x86 terminal to install and use (M1 not yet supported)</li>\n<li>Packages\n<ul>\n<li>Highlight</li>\n</ul>\n</li>\n</ul>"}},"pageContext":{"slug":"2020-12-20-mac-shell-configuration"}},
    "staticQueryHashes": ["3159585216","440568431"]}