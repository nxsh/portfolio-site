{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/blog/2021-01-24-data-structures-linked-list",
    "result": {"data":{"markdownRemark":{"frontmatter":{"title":"Data Structures Part III - Linked Lists","date":"January 24, 2021"},"html":"<h1>What is a Linked List?</h1>\n<ul>\n<li>A linked list is a <em>linear data structure</em>, meaning elements are accessed sequentially</li>\n<li>Elements of a linked list are not stored in memory together (non-contiguous), the linking of elements is achieved through <strong>pointers</strong>\n<ul>\n<li>Because elements are accessed sequentially the speed of search operations are dependent on the size of the list</li>\n</ul>\n</li>\n<li>Each element is a separate object (objects of class <code>node</code> in the below implementation).</li>\n<li><code>node</code> objects are composed of: the value of the node, and the pointer to the next node (if any)</li>\n<li>The first node is known as the <code>head</code></li>\n<li>The last node is the <code>tail</code> and points to <code>null</code> or None</li>\n</ul>\n<h1>LinkedList Class Definition in Python</h1>\n<deckgo-highlight-code language=\"python\" theme=\"nord\" line-numbers=\"true\"  >\n          <code slot=\"code\">class LinkedList:\n    def __init__(self, head=None):\n        self.head = head\n    \n    # repr method defines the &#39;representation&#39; of objects \n    # Essentially defines how they will be displayed textually\n    def __repr__(self): \n        node = self.head\n        nodes = []\n        while node is not None:\n            nodes.append(node.value)\n            node = node.next\n        nodes.append(&quot;None&quot;)\n        return &quot; -&gt; &quot;.join(map(str, nodes))\n\nclass Node:\n    def __init__(self, value, next=None):\n        self.value = value\n        self.next = next\n\n    # Override the output representation of an object from a class\n    def __repr__(self):\n        return self.value</code>\n        </deckgo-highlight-code>\n<h1>LinkedList Implementation</h1>\n<deckgo-highlight-code language=\"python\" theme=\"nord\" line-numbers=\"true\"  >\n          <code slot=\"code\"># List\nllist = LinkedList()\n\n# Nodes\nfirst = Node(1)\nsecond = Node(2)\nthird = Node(3)\n\nfirst.next = second\nsecond.next = third\n\n# Linking\nllist.head = first\nllist.head.next = second\nsecond.next = third\n\nprint(repr(llist))</code>\n        </deckgo-highlight-code>\n<p>Output: <code>1 -> 2 -> 3 -> None</code> = <code>head(first) -> second -> tail(third) -> None</code></p>\n<h1>Why use a Linked List?</h1>"}},"pageContext":{"slug":"2021-01-24-data-structures-linked-list"}},
    "staticQueryHashes": ["3159585216","440568431"]}