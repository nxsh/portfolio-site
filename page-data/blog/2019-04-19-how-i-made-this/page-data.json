{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/blog/2019-04-19-how-i-made-this",
    "result": {"data":{"markdownRemark":{"frontmatter":{"title":"How I Created This Blog","date":"April 19, 2019"},"html":"<p>I created this blog using <em>Jekyll</em>, which is a static site generator.\nAs this site is hosted using GitHub's <em>pages</em> (which only allows for static content), this was the perfect solution for me.</p>\n<h1>Prerequisites</h1>\n<ul>\n<li>Ruby (<a href=\"https://www.ruby-lang.org/en/documentation/installation/\">install instructions</a>)</li>\n<li>Jekyll and it's bundler\n<ul>\n<li><code>gem jekyll bundler</code></li>\n</ul>\n</li>\n</ul>\n<h1>Setting up a repo</h1>\n<ul>\n<li>Create a new GitHub repo where the blog's source files will be kept</li>\n<li>Enable GitHub pages in settings</li>\n<li>By default the URL for the blog will be <em>username</em>.github.io/<em>repo_name</em>/</li>\n</ul>\n<h1>Creating a new Jekyll site</h1>\n<p>Creating a default Jekyll website is as easy as running <code>jekyll new mypagename</code></p>\n<p>Once ran, navigate to this new directory and you will see the following structure:</p>\n<deckgo-highlight-code  theme=\"nord\" line-numbers=\"true\"  >\n          <code slot=\"code\">mypagename\n├── _config.yml\n├── _posts\n|   ├── 2007-10-29-why-every-programmer-should-play-nethack.md\n|   └── 2009-04-26-barcamp-boston-4-roundup.md\n├── _site\n├── index.md\n├── about.md\n└── 404.md</code>\n        </deckgo-highlight-code>\n<p>To generate the Jekyll website (and start up the Jekyll server), run <code>jekyll serve --watch</code> in the site's root folder.<br>\nThe local version of the website can be accessed at <code>localhost:4000</code></p>\n<p>The <code>_config.yml</code> file is the main file used to configure the Jekyll site, open it up to change things like the title, description and URL.\nLuckily when Jekyll generates this file, it comments plenty of instructions on how to use the file, have fun and play around with it!</p>\n<p><strong>Note:</strong> when changes are made to the config file, the server must be restarted to reflect the changes.</p>\n<p>Each <em>page</em> of the site corresponds to a <strong>markdown</strong> file, <code>index.md</code> being the home page and other markdown files such as <code>about.md</code> are other pages on the site.</p>\n<h1>Adding Pages</h1>\n<p>Adding a new page to the site is as simple as creating a new markdown file in the site's root.</p>\n<p>Add a bit of configuration in the header like below:</p>\n<deckgo-highlight-code  theme=\"nord\" line-numbers=\"true\"  >\n          <code slot=\"code\">---\nlayout: page\ntitle: About\npermalink: /about/\n---</code>\n        </deckgo-highlight-code>\n<p>Then simply write the content of the page in markdown.</p>\n<h1>Adding Posts</h1>\n<p>Adding new blog posts using Jekyll is just as easy, create a new markdown file with the following naming convention: <code>YYYY-MM-DD-title-of-post.md</code> inside the <code>_posts</code> folder.</p>\n<p>Again add some header information, I recommend including the date for easy tracking of posts.</p>\n<deckgo-highlight-code  theme=\"nord\" line-numbers=\"true\"  >\n          <code slot=\"code\">---\nlayout: post\ntitle:  &quot;How I Created this Blog&quot;\ndate:   2019-04-19 17:05:00 +0100\n---</code>\n        </deckgo-highlight-code>\n<p>And finish the rest of the file by writing content in markdown.</p>\n<h1>Going Further</h1>\n<p>These instructions will give you a very simple introduction to using Jekyll as a blog platform, there are many ways to go further with it such as customising styles, layouts, etc.</p>\n<p>To get it working with GitHub's pages, run <code>jekyll build</code> and copy the contents of <code>_site</code> to the root of the repo.<br>\nAlternatively, use the contents of the folder generated by <code>jekyll new mypagename</code> as the root of the repo.</p>"}},"pageContext":{"slug":"2019-04-19-how-i-made-this"}},
    "staticQueryHashes": ["3159585216","440568431"]}